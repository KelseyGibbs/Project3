{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/layout/Landing.js","components/layout/Navbar.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Landing","Component","react_default","a","createElement","className","react_router_dom","to","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","push","nextProps","style","paddingLeft","noValidate","error","classnames","invalid","htmlFor","width","borderRadius","letterSpacing","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","_ref","component","rest","objectWithoutProperties","react_router","assign","render","Dashboard","onLogoutClick","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","es","exact","path","private_route_PrivateRoute","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a9e72851.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>WholeBaker</b> \n            </h4>\n            <p className=\"flow-text grey-text\">\n              A bakery ordering and recipe management application.\n            </p>\n            <br />\n            <div className=\"col s12\">\n              <Link\n                to=\"/login\"\n                className=\"btn\"\n              >Log In</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link\n              to=\"/\"\n              className=\"col s12 brand-logo center black-text\"\n            >\n              Home\n            </Link>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n\n            <div className=\"col s12\">\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                <b>Don't have an account?</b> Contact WholeBaker to get setup \n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\">\n                <button\n                  type=\"submit\"\n                  className=\"btn\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Hey there,</b> {user.name}\n              <p className=\"flow-text grey-text text-darken-1\">\n                You are logged into <b>WholeBaker</b>\n              </p>\n            </h4>\n            <button\n              onClick={this.onLogoutClick}\n              className=\"btn\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport \"./App.css\";\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}